{"version":3,"sources":["components/likes/like.component.jsx","components/likes/unlike.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/with-spinner/with-spinner.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Like","props","className","class","onClick","setChange","index","Unlike","Card","content","heading","i","patent","length","Array","fill","join","alt","src","width","isLiked","href","CardList","patents","map","key","SearchBox","placeholder","handleChange","input","onChange","WithSpinner","App","x","temp","state","setState","searchfield","isLoading","fetch","then","response","json","users","results","this","push","filteredPatents","filter","toLowerCase","includes","aria-hidden","e","target","value","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64d1983c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './like.styles.css';\r\n\r\nexport const Like = props => (\r\n    <div className=\"card-actions\">\r\n        <button class=\"test\" onClick={() => props.setChange(props.index)}><i class=\"fas fa-heart\"></i> Like</button>\r\n    </div>\r\n);","import React from 'react';\r\nimport './unlike.styles.css';\r\n\r\nexport const Unlike = props => (\r\n    <div className=\"card-actions\">\r\n        <button class=\"testUnlike\" onClick={() => props.setChange(props.index)}><i class=\"fas fa-heart\"></i> Unlike</button>\r\n    </div>\r\n);","import React from 'react';\nimport './card.styles.css';\nimport {Like} from '../../components/likes/like.component';\nimport {Unlike} from '../../components/likes/unlike.component';\n\n\nexport const Card = (props) => {\n    let content=\"\",heading=\"\";\n    for(let i=0;i<props.patent[3].length;i++){\n        if(props.patent[3][i]==='<'){\n            i=i+37;\n            content=content + \"engine \";\n        }\n        else {\n            content=content + props.patent[3][i];\n        }\n    }\n    for(let i=0;i<props.patent[2].length;i++){\n        if(props.patent[2][i]==='<'){\n            i=i+37;\n            heading=heading + \"engine \";\n        }\n        else {\n            heading=heading + props.patent[2][i];\n        }\n    }\n    if(heading.length<72)heading = heading + Array(2).fill('\\xa0').join('\\n') + ' ';\n    return (\n    <div className=\"card\">\n        <div className=\"card-header\">\n            <p className=\"user-name\">{heading}</p>\n            <p className=\"time\">{props.patent[1]}</p>\n        </div>\n        <div className=\"card-image\">\n            <img alt=\"monster\" src={props.patent[10]} width=\"100%\" />\n        </div>\n        <div className=\"card-actions\">\n            {\n                props.isLiked[props.patent[13]] ? <Unlike setChange={props.setChange} index={props.patent[13]} /> : <Like setChange={props.setChange} index={props.patent[13]} />\n            }\n\t  </div>\n        <div className=\"card-content\">\n            {/* eslint-disable-next-line */}\n            <a href=\"#\" class=\"hashtag\">#{props.patent[5]}</a>\n            <p>{content}</p>\n        </div>\n    </div>\n    );\n}\n ","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => (\n     <div className='card-list'> \n    {props.patents.map(patent => (\n\n        <Card key={patent[0]} patent={patent} isLiked={props.isLiked} setChange={props.setChange} />\n\n        ))} \n        \n        </div>\n);","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange})  => (\n\n    <input \n        className='search'\n        input='seacrh'\n        placeholder={placeholder}\n        onChange={handleChange}\n    />    \n\n\n);  ","import React from 'react';\r\n\r\nimport './with-spinner.styles.css';\r\n\r\nexport const WithSpinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n        <div className=\"bar1\"></div>\r\n        <div className=\"bar2\"></div>\r\n        <div className=\"bar3\"></div>\r\n        <div className=\"bar4\"></div>\r\n        <div className=\"bar5\"></div>\r\n</div>\r\n    );\r\n};\r\n\r\nexport default WithSpinner;","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport {WithSpinner} from './components/with-spinner/with-spinner.component';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state={\n      patents: [],\n      searchfield: '',\n      isLiked: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://api.nasa.gov/techtransfer/patent/?engine&api_key=yGTtYuwPkMhpG6ZxtAqdsmndh2lVNgJsMboKOUFi')\n    .then(response => response.json())\n    .then(users => this.setState({patents: users.results,isLoading: false}, function (){\n      for(let i=0;i<this.state.patents.length;i++){\n        this.state.patents[i].push(i);\n      }\n      for(let i=0;i<this.state.patents.length;i++){\n        this.state.isLiked.push(false);\n      }\n    }));\n  }\n  setChange = (x) => {\n    let temp=this.state.isLiked;\n    temp[x]=!this.state.isLiked[x];\n    this.setState({isLiked: temp});\n  }\n  \n  render() {\n    const {patents,searchfield,isLiked}=this.state;\n    const filteredPatents=patents.filter(patent =>\n      (patent[1].toLowerCase().includes(searchfield.toLowerCase()) || patent[2].toLowerCase().includes(searchfield.toLowerCase())\n        || patent[3].toLowerCase().includes(searchfield.toLowerCase()) || patent[5].toLowerCase().includes(searchfield.toLowerCase())) \n    );\n    return (\n      <div className=\"App\">\n        <div className=\"mainbody\">\n        <header>\n          <h1 class=\"main-heading\"> <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>Patent-to-gram</h1>\n        </header>\n        <section class=\"profile\">\n          <img class=\"avatar\" src=\"https://i.ibb.co/YkWDrn6/51-HM-OWbzn-L.jpg\" alt=\"\" />\n          <div class=\"profile-info\">\n            <h1>NASA TechTransfer</h1>\n            <p class=\"intro\"> Hi, this webpage provides structured, searchable developer access to NASAâ€™s patents, software, and technology spinoff descriptions that have been curated to support technology transfer.</p>\n          </div>\n        </section>\n        <SearchBox \n          placeholder='Filter patents by topic/content/hashtag/sensors'\n          handleChange={e =>this.setState({searchfield: e.target.value})}\n        />\n        </div>\n        {\n          this.state.isLoading ? <WithSpinner /> : <CardList patents={filteredPatents} isLiked={isLiked} setChange={this.setChange} /> \n        }\n        <footer>&copy;2021 Paras' Patent-to-gram</footer>\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}